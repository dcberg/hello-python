version: 0.1
component: build
timeoutInSeconds: 6000
shell: bash

# Variables
env:
  exportedVariables:
    - TAG_VERSION
    - COMMIT
  vaultVariables:
    docker_registry_password : ocid1.vaultsecret.oc1.phx.amaaaaaayat6pyaacvggvlf6hmbgqguquempfl73xfo7fce5r4tiqh5ulgjq

inputArtifacts:

steps:
  - type: Command
    name: "Export image tag"
    timeoutInSeconds: 40
    command: |
      export TAG_VERSION=`echo ${OCI_BUILD_RUN_ID} | tail -c 8`
  - type: Command
    name: "Export commit tag"
    timeoutInSeconds: 20
    command: |
      export COMMIT=`git rev-parse --short HEAD`
  - type: Command
    name: "Echo Variables"
    command: |
      echo "TAG_VERSION = " $TAG_VERSION
      echo "COMMIT = " $COMMIT
  - type: Command
    timeoutInSeconds: 400
    name: "Docker Build"
    command: |
      docker build -t danberg/hello-py -f Dockerfile .
      docker tag danberg/hello-py:latest danberg/hello-py:$TAG_VERSION
    onFailure:
      - type: Command
        command: |
          echo "Handling image build failure"
          build_result=FAILURE
          echo "Image build failure successfully handled"
        timeoutInSeconds: 400
  - type: Command
    timeoutInSeconds: 60
    name: "Log into Dockerhub"
    command: |
      docker login -u "danberg" -p ${docker_registry_password}
  - type: Command
    timeoutInSeconds: 400
    name: "Push image to Dockerhub with proper tag"
    command: |
      docker push danberg/hello-py:$TAG_VERSION
  - type: Command
    timeoutInSeconds: 40
    name: "Copy Kubernetes manifest"
    command: |
      cp ${OCI_PRIMARY_SOURCE_DIR}/kubernetes/deployment_oke.yaml deployment/deployment_oke.yaml
        
outputArtifacts:
  - name: deployment-manifest
    type: BINARY
    location: deployment/deployment_oke.yaml
  - name: hello-image
    type: DOCKER_IMAGE
    location: danberg/hello-py